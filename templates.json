{
    "version": "2",
    "templates": [
        {
            "type": 3,
            "title": "Airsonic",
            "name": "Airsonic",
            "categories": [
                "Media Sharing"
            ],
            "description": "Airsonic is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
            "note": "<p>Base image documentation at <a href='https://docs.linuxserver.io/images/docker-airsonic-advanced' target='_blank'>Linuxserver.io</a> </p><p>Don't forget to create the volume directories on the host file system.</p><p>'mkdir -p /opt/airsonic/{config,music,playlists,podcasts,media}'</p>",
            "logo": "https://raw.githubusercontent.com/Aspirational-Cognition/past/main/logos/airsonic.png",
            "platform": "linux",
            "repository": {
                "url": "https://github.com/Aspirational-Cognition/past",
                "stackfile": "stackfiles/airsonic/docker-compose.yaml"
            },
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "Linux user id, set for proper filesystem access."
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "Linux group id, set for proper filesystem access."
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Default timezone."
                },
                {
                    "name": "MAIN_PORT",
                    "label": "Main port",
                    "default": "4040",
                    "description": "Port to expose on the docker host."
                },
                {
                    "name": "CONTEXT_PATH",
                    "label": "CONTEXT_PATH",
                    "default": "/",
                    "description": "For setting url-base in reverse proxy setups."
                },
                {
                    "name": "AIRSONIC_CONFIG",
                    "label": "AIRSONIC_CONFIG",
                    "default": "/opt/airsonic/config",
                    "description": "Bind mount for configs."
                },
                {
                    "name": "AIRSONIC_MUSIC",
                    "label": "AIRSONIC_MUSIC",
                    "default": "/opt/airsonic/music",
                    "description": "Bind mount for music."
                },
                {
                    "name": "AIRSONIC_PLAYLISTS",
                    "label": "AIRSONIC_PLAYLISTS",
                    "default": "/opt/airsonic/playlists",
                    "description": "Bind mount for playlists."
                },
                {
                    "name": "AIRSONIC_PODCASTS",
                    "label": "AIRSONIC_PODCASTS",
                    "default": "/opt/airsonic/podcasts",
                    "description": "Bind mount for podcasts."
                },
                {
                    "name": "AIRSONIC_MEDIA",
                    "label": "AIRSONIC_MEDIA",
                    "default": "/opt/airsonic/media",
                    "description": "Bind mount for media."
                },
                {
                    "name": "JAVA_OPTS",
                    "label": "JAVA_OPTS",
                    "default": "-Xms256m -Xmx512m",
                    "description": "For passing additional java options."
                }
            ]
        },
        {
            "type": 3,
            "title": "Apprise-api",
            "name": "Apprise",
            "categories": [
                "API"
            ],
            "description": "Apprise-api ( https://github.com/caronc/apprise-api ) takes advantage of Apprise ( https://github.com/caronc/apprise ) through your network with a user-friendly API. Send notifications to more than 65+ services. An incredibly lightweight gateway to Apprise. A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
            "note": "<p>Base image documentation at <a href='https://docs.linuxserver.io/images/docker-apprise-api' target='_blank'>Linuxserver.io</a></p><p>Don't forget to create the volume directories on the host file system.</p><p>'mkdir -p /opt/apprise-api/config}'</p>",
            "logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
            "platform": "linux",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "Linux user id, set for proper filesystem access."
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "Linux group id, set for proper filesystem access."
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Default timezone."
                },
                {
                    "name": "APPRISE_API_CONFIG",
                    "label": "APPRISE_API_CONFIG",
                    "default": "/opt/apprise-api/config",
                    "description": "Bind mount for configs."
                },
                {
                    "name": "MAIN_PORT",
                    "label": "Main port",
                    "default": "8000",
                    "description": "Port to expose on the docker host."
                }
            ]
        },
        {
            "type": 3,
            "title": "BudgE",
            "name": "BudgE",
            "categories": [
                "Finance"
            ],
            "description": "BudgE is an open source 'budgeting with envelopes' personal finance app.",
            "note": "<p>Source repo at <a href='https://github.com/linuxserver/budge' target='_blank'>GitHub</a> Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /opt/budge/{config,data}</p>",
            "logo": "https://github.com/linuxserver/budge/raw/main/frontend/public/logo192.png",
            "platform": "linux",
            "env": [
                {
                    "name": "BUDGE_DATA",
                    "label": "BUDGE_DATA",
                    "default": "/opt/budge/data",
                    "description": "Bind mount for configs."
                },
                {
                    "name": "BUDGE_CONFIG",
                    "label": "BUDGE_CONFIG",
                    "default": "/opt/budge/config",
                    "description": "Bind mount for configs."
                },
                {
                    "name": "MAIN_PORT",
                    "label": "Main port",
                    "default": "8090"
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                }
            ]
        },
        {
            "type": 3,
            "title": "Budibase",
            "categories": [
                "Developer Tools"
            ],
            "description": "Build modern business apps in minutes",
            "logo": "https://budibase.com/favicon.ico",
            "platform": "linux",
            "repository": {
                "url": "https://github.com/Aspirational-Cognition/past",
                "stackfile": "stackfiles/budibase/docker-compose.yaml"
            },
            "env": [
                {
                    "name": "MAIN_PORT",
                    "label": "Main port",
                    "default": "10000"
                },
                {
                    "name": "JWT_SECRET",
                    "label": "JWT secret",
                    "default": "change-me"
                },
                {
                    "name": "MINIO_ACCESS_KEY",
                    "label": "MinIO access key",
                    "default": "change-me"
                },
                {
                    "name": "MINIO_SECRET_KEY",
                    "label": "MinIO secret key",
                    "default": "change-me"
                },
                {
                    "name": "COUCH_DB_USER",
                    "default": "budibase",
                    "preset": true
                },
                {
                    "name": "COUCH_DB_PASSWORD",
                    "label": "Couch DB password",
                    "default": "change-me"
                },
                {
                    "name": "REDIS_PASSWORD",
                    "label": "Redis password",
                    "default": "change-me"
                },
                {
                    "name": "INTERNAL_API_KEY",
                    "label": "Internal API key",
                    "default": "change-me"
                },
                {
                    "name": "APP_PORT",
                    "default": "4002",
                    "preset": true
                },
                {
                    "name": "WORKER_PORT",
                    "default": "4003",
                    "preset": true
                },
                {
                    "name": "MINIO_PORT",
                    "default": "4004",
                    "preset": true
                },
                {
                    "name": "COUCH_DB_PORT",
                    "default": "4005",
                    "preset": true
                },
                {
                    "name": "REDIS_PORT",
                    "default": "6379",
                    "preset": true
                },
                {
                    "name": "WATCHTOWER_PORT",
                    "default": "6161",
                    "preset": true
                },
                {
                    "name": "BUDIBASE_ENVIRONMENT",
                    "default": "PRODUCTION",
                    "preset": true
                }
            ]
        },
        {
            "type": 1,
            "title": "Dillinger",
            "name": "Dillinger",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dillinger/config</p>",
            "description": "[Dillinger](https://github.com/joemccann/dillinger) is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
            "categories": [
                "Development"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png",
            "image": "linuxserver/dillinger:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/dillinger/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Endlessh",
            "categories": [
                "Security"
            ],
            "name": "Endlessh",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/endlessh/config</p>",
            "description": "[Endlessh](https://github.com/skeeto/endlessh) is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.",
            "platform": "linux",
            "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png",
            "image": "linuxserver/endlessh:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                },
                {
                    "name": "MSDELAY",
                    "label": "MSDELAY",
                    "default": "10000",
                    "description": "The endless banner is sent one line at a time. This is the delay in milliseconds between individual lines."
                },
                {
                    "name": "MAXLINES",
                    "label": "MAXLINES",
                    "default": "32",
                    "description": "The length of each line is randomized. This controls the maximum length of each line. Shorter lines may keep clients on for longer if they give up after a certain number of bytes."
                },
                {
                    "name": "MAXCLIENTS",
                    "label": "MAXCLIENTS",
                    "default": "4096",
                    "description": "Maximum number of connections to accept at a time. Connections beyond this are not immediately rejected, but will wait in the queue."
                },
                {
                    "name": "LOGFILE",
                    "label": "LOGFILE",
                    "default": "false",
                    "description": "By default, the app logs to container log. If this is set to `true`, the log will be output to file under `/config/logs/endlessh` (`/config` needs to be mapped)."
                },
                {
                    "name": "BINDFAMILY",
                    "label": "BINDFAMILY",
                    "default": "",
                    "description": "By default, the app binds to IPv4 and IPv6 addresses. Set it to `4` or `6` to bind to IPv4 only or IPv6 only, respectively. Leave blank to bind to both."
                }
            ],
            "ports": [
                "22:2222/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/endlessh/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Mastodon",
            "name": "Mastodon",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mastodon/config</p>",
            "description": "[Mastodon](https://github.com/mastodon/mastodon/) is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..",
            "categories": [
                "Social"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mastodon-banner.png",
            "image": "linuxserver/mastodon:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                },
                {
                    "name": "LOCAL_DOMAIN",
                    "label": "LOCAL_DOMAIN",
                    "default": "example.com",
                    "description": "This is the unique identifier of your server in the network. It cannot be safely changed later."
                },
                {
                    "name": "REDIS_HOST",
                    "label": "REDIS_HOST",
                    "default": "redis",
                    "description": "Redis server hostname"
                },
                {
                    "name": "REDIS_PORT",
                    "label": "REDIS_PORT",
                    "default": "6379",
                    "description": "Redis port"
                },
                {
                    "name": "DB_HOST",
                    "label": "DB_HOST",
                    "default": "db",
                    "description": "Postgres database hostname"
                },
                {
                    "name": "DB_USER",
                    "label": "DB_USER",
                    "default": "mastodon",
                    "description": "Postgres username"
                },
                {
                    "name": "DB_NAME",
                    "label": "DB_NAME",
                    "default": "mastodon",
                    "description": "Postgres db name"
                },
                {
                    "name": "DB_PASS",
                    "label": "DB_PASS",
                    "default": "mastodon",
                    "description": "Postgres password"
                },
                {
                    "name": "DB_PORT",
                    "label": "DB_PORT",
                    "default": "5432",
                    "description": "Portgres port"
                },
                {
                    "name": "ES_ENABLED",
                    "label": "ES_ENABLED",
                    "default": "false",
                    "description": "Enable or disable Elasticsearch (requires a separate ES instance)"
                },
                {
                    "name": "SECRET_KEY_BASE",
                    "label": "SECRET_KEY_BASE",
                    "default": "",
                    "description": "Browser session secret. Changing it will break all active browser sessions."
                },
                {
                    "name": "OTP_SECRET",
                    "label": "OTP_SECRET",
                    "default": "",
                    "description": "MFA secret. Changing it will break two-factor authentication."
                },
                {
                    "name": "VAPID_PRIVATE_KEY",
                    "label": "VAPID_PRIVATE_KEY",
                    "default": "",
                    "description": "Push notification private key. Changing it will break push notifications."
                },
                {
                    "name": "VAPID_PUBLIC_KEY",
                    "label": "VAPID_PUBLIC_KEY",
                    "default": "",
                    "description": "Push notification public key. Changing it will break push notifications."
                },
                {
                    "name": "SMTP_SERVER",
                    "label": "SMTP_SERVER",
                    "default": "mail.example.com",
                    "description": "SMTP server for email notifications"
                },
                {
                    "name": "SMTP_PORT",
                    "label": "SMTP_PORT",
                    "default": "25",
                    "description": "SMTP server port"
                },
                {
                    "name": "SMTP_LOGIN",
                    "label": "SMTP_LOGIN",
                    "default": "",
                    "description": "SMTP username"
                },
                {
                    "name": "SMTP_PASSWORD",
                    "label": "SMTP_PASSWORD",
                    "default": "",
                    "description": "SMTP password"
                },
                {
                    "name": "SMTP_FROM_ADDRESS",
                    "label": "SMTP_FROM_ADDRESS",
                    "default": "notifications@example.com",
                    "description": "From address for emails send from Mastodon"
                },
                {
                    "name": "S3_ENABLED",
                    "label": "S3_ENABLED",
                    "default": "false",
                    "description": "Enable or disable S3 storage of uploaded files"
                },
                {
                    "name": "WEB_DOMAIN",
                    "label": "WEB_DOMAIN",
                    "default": "mastodon.example.com",
                    "description": "This can be set if you want your server identifier to be different to the subdomain hosting Mastodon. See https://docs.joinmastodon.org/admin/config/#basic"
                },
                {
                    "name": "ES_HOST",
                    "label": "ES_HOST",
                    "default": "es",
                    "description": "Elasticsearch server hostname"
                },
                {
                    "name": "ES_PORT",
                    "label": "ES_PORT",
                    "default": "9200",
                    "description": "Elasticsearch port"
                },
                {
                    "name": "ES_USER",
                    "label": "ES_USER",
                    "default": "elastic",
                    "description": "Elasticsearch username"
                },
                {
                    "name": "ES_PASS",
                    "label": "ES_PASS",
                    "default": "elastic",
                    "description": "Elasticsearch password"
                },
                {
                    "name": "S3_BUCKET",
                    "label": "S3_BUCKET",
                    "default": "",
                    "description": "S3 bucket hostname"
                },
                {
                    "name": "AWS_ACCESS_KEY_ID",
                    "label": "AWS_ACCESS_KEY_ID",
                    "default": "",
                    "description": "S3 bucket access key ID"
                },
                {
                    "name": "AWS_SECRET_ACCESS_KEY",
                    "label": "AWS_SECRET_ACCESS_KEY",
                    "default": "",
                    "description": "S3 bucket secret access key"
                },
                {
                    "name": "S3_ALIAS_HOST",
                    "label": "S3_ALIAS_HOST",
                    "default": "",
                    "description": "Alternate hostname for object fetching if you are front the S3 connections."
                }
            ],
            "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/mastodon/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Netbootxyz",
            "categories": [
                "Networking"
            ],
            "name": "Netbootxyz",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbootxyz/config<br>mkdir -p /volume1/docker/netbootxyz/assets</p>",
            "description": "[Netbootxyz](https://netboot.xyz) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
            "platform": "linux",
            "logo": "https://netboot.xyz/images/netboot.xyz.gif",
            "image": "linuxserver/netbootxyz:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "MENU_VERSION",
                    "label": "MENU_VERSION",
                    "default": "1.9.9",
                    "description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)"
                },
                {
                    "name": "PORT_RANGE",
                    "label": "PORT_RANGE",
                    "default": "30000:30010",
                    "description": "Specify the port range tftp will use for data transfers [(see Wikipedia)](https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)"
                },
                {
                    "name": "SUBFOLDER",
                    "label": "SUBFOLDER",
                    "default": "/",
                    "description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)"
                }
            ],
            "ports": [
                "3000:3000/tcp",
                "69:69/udp",
                "8080:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/netbootxyz/config"
                },
                {
                    "container": "/assets",
                    "bind": "/volume1/docker/netbootxyz/assets"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Projectsend",
            "categories": [
                "File Management"
            ],
            "name": "Projectsend",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/projectsend/config<br>mkdir -p /volume1/docker/projectsend/data</p>",
            "description": "[Projectsend](http://www.projectsend.org) is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself. Secure, private and easy. No more depending on external services or e-mail to send those files.",
            "platform": "linux",
            "logo": "http://www.projectsend.org/wp-content/themes/projectsend/img/screenshots.png",
            "image": "linuxserver/projectsend:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                },
                {
                    "name": "MAX_UPLOAD",
                    "label": "MAX_UPLOAD",
                    "default": "5000",
                    "description": "To set maximum upload size (in MB), default if unset is 5000."
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/projectsend/config"
                },
                {
                    "container": "/data",
                    "bind": "/volume1/docker/projectsend/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Pwndrop",
            "categories": [
                "File Management"
            ],
            "name": "Pwndrop",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pwndrop/config</p>",
            "description": "[Pwndrop](https://github.com/kgretzky/pwndrop) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
            "image": "linuxserver/pwndrop:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                },
                {
                    "name": "SECRET_PATH",
                    "label": "SECRET_PATH",
                    "default": "/pwndrop",
                    "description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui."
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/pwndrop/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Pylon",
            "categories": [
                "Development"
            ],
            "name": "Pylon",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pylon/config<br>mkdir -p /volume1/docker/pylon/code</p>",
            "description": "[Pylon](https://github.com/pylonide/pylon) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
            "image": "linuxserver/pylon:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                },
                {
                    "name": "GITURL",
                    "label": "GITURL",
                    "default": "https://github.com/linuxserver/docker-pylon.git",
                    "description": "Specify a git repo to checkout on first startup"
                },
                {
                    "name": "PYUSER",
                    "label": "PYUSER",
                    "default": "myuser",
                    "description": "Specify a basic auth user."
                },
                {
                    "name": "PYPASS",
                    "label": "PYPASS",
                    "default": "mypass",
                    "description": "Specify a basic auth password."
                }
            ],
            "ports": [
                "3131:3131/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/pylon/config"
                },
                {
                    "container": "/code",
                    "bind": "/volume1/docker/pylon/code"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Smokeping",
            "categories": [
                "Monitoring"
            ],
            "name": "Smokeping",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/smokeping/config<br>mkdir -p /volume1/docker/smokeping/data</p>",
            "description": "[Smokeping](https://oss.oetiker.ch/smokeping/) keeps track of your network latency. For a full example of what this application is capable of visit [UCDavis](http://smokeping.ucdavis.edu/cgi-bin/smokeping.fcgi).",
            "platform": "linux",
            "logo": "https://camo.githubusercontent.com/e0694ef783e3fd1d74e6776b28822ced01c7cc17/687474703a2f2f6f73732e6f6574696b65722e63682f736d6f6b6570696e672f696e632f736d6f6b6570696e672d6c6f676f2e706e67",
            "image": "linuxserver/smokeping:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/smokeping/config"
                },
                {
                    "container": "/data",
                    "bind": "/volume1/docker/smokeping/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Unifi Controller",
            "name": "Unifi-controller",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/unifi-controller/config</p>",
            "description": "The [Unifi-controller](https://www.ubnt.com/enterprise/#unifi) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
            "categories": [
                "Networking"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png",
            "image": "linuxserver/unifi-controller:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                },
                {
                    "name": "MEM_LIMIT",
                    "label": "MEM_LIMIT",
                    "default": "1010",
                    "description": "Optionally change the Java memory limit. Set to `default` to reset to default"
                },
                {
                    "name": "MEM_STARTUP",
                    "label": "MEM_STARTUP",
                    "default": "1010",
                    "description": "Optionally change the Java initial/minimum memory. Set to `default` to reset to default"
                }
            ],
            "ports": [
                "8443:8443/tcp",
                "3478:3478/udp",
                "10001:10001/udp",
                "8080:8080/tcp",
                "1900:1900/udp",
                "8843:8843/tcp",
                "8880:8880/tcp",
                "6789:6789/tcp",
                "5514:5514/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Unifi",
                    "bind": "/volume1/docker/unifi-controller/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Quassel-core",
            "categories": [
                "Social",
                "Chat"
            ],
            "name": "Quassel-core",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-core/config</p>",
            "description": "[Quassel-core](http://quassel-irc.org/) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.",
            "platform": "linux",
            "logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
            "image": "linuxserver/quassel-core:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use for example America/New_York"
                },
                {
                    "name": "RUN_OPTS",
                    "label": "RUN_OPTS",
                    "default": "--config-from-environment",
                    "description": "Custom CLI options for Quassel"
                }
            ],
            "ports": [
                "4242:4242/tcp",
                "113:10113/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/quassel-core/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Quassel-web",
            "categories": [
                "Social",
                "Chat"
            ],
            "name": "Quassel-web",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-web/config</p>",
            "description": "[Quassel-web](https://github.com/magne4000/quassel-webserver) is a web client for Quassel. Note that a Quassel-Core instance is required, we have a container available [here.](https://hub.docker.com/r/linuxserver/quassel-core/)",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png",
            "image": "linuxserver/quassel-web:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1010",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1010",
                    "description": "for GroupID"
                },
                {
                    "name": "QUASSEL_CORE",
                    "label": "QUASSEL_CORE",
                    "default": "192.168.1.10",
                    "description": "specify the URL or IP address of your Quassel Core instance"
                },
                {
                    "name": "QUASSEL_PORT",
                    "label": "QUASSEL_PORT",
                    "default": "4242",
                    "description": "specify the port of your Quassel Core instance"
                },
                {
                    "name": "URL_BASE",
                    "label": "URL_BASE",
                    "default": "/quassel",
                    "description": "Specify a url-base in reverse proxy setups ie. `/quassel`"
                }
            ],
            "ports": [
                "64443:64443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/volume1/docker/quassel-web/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "categories": [
                "Monitoring"
            ],
            "description": "WIFI / LAN intruder detector",
            "env": [
                {
                    "default": "1010",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1010",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "jokobsk/pi.alert",
            "logo": "https://raw.githubusercontent.com/pucherot/Pi.Alert/main/docs/img/1_devices.jpg",
            "name": "pi.alert",
            "platform": "linux",
            "ports": [
                "20211:20211/udp"
            ],
            "restart_policy": "always",
            "title": "Pi.alert",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/pi.alert",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Monitoring"
            ],
            "description": "It is a self-hosted monitoring tool like Uptime Robot",
            "image": "louislam/uptime-kuma:latest",
            "logo": "https://images.opencollective.com/uptime-kuma/29c5113/logo/256.png",
            "name": "uptime-kuma",
            "platform": "linux",
            "ports": [
                "3001:3001/tcp"
            ],
            "restart_policy": "always",
            "title": "Uptime Kuma",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/UptimeKuma",
                    "container": "/app/data"
                }
            ]
        },
        {
            "categories": [
                "Finance"
            ],
            "description": "Ghostfolio is an open source wealth management software built with web technology.",
            "logo": "https://avatars.githubusercontent.com/u/82473144?s=200",
            "name": "Ghostfolio",
            "repository": {
                "stackfile": "Template/Stack/ghostfolio.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "platform": "linux",
            "ports": [
                "3663:80/tcp"
            ],
            "restart_policy": "always",
            "title": "Ghostfolio",
            "type": 3
        },
        {
            "categories": [
                "Finance"
            ],
            "description": "Cryptofolio is an open-source, and self-hosted solution for tracking your cryptocurrency holdings. It features a web interface, an Android mobile app, and a cross-platform desktop application for Windows, macOS, and Linux.",
            "image": "xtrendence/cryptofolio:latest",
            "logo": "https://i.imgur.com/5v8lzea.png",
            "name": "cryptofolio",
            "platform": "linux",
            "ports": [
                "7280:80/tcp"
            ],
            "restart_policy": "always",
            "title": "Cryptofolio",
            "type": 1
        },
        {
            "categories": [
                "Monitoring"
            ],
            "description": "An easy to use Status Page for your websites and applications. Statping will automatically fetch the application and render a beautiful status page with tons of features for you to build an even better status page.",
            "image": "statping/statping:latest",
            "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/statping.png",
            "name": "statping",
            "platform": "linux",
            "ports": [
                "4040:8080/tcp"
            ],
            "restart_policy": "always",
            "title": "Statping",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/statping",
                    "container": "/app"
                }
            ]
        },
        {
            "categories": [
                "Monitoring"
            ],
            "description": "Network UPS Tools server",
            "image": "upshift/nut-upsd",
            "logo": "",
            "name": "nuts",
            "platform": "linux",
            "ports": [
                "3493:3493/tcp"
            ],
            "restart_policy": "always",
            "title": "NUTS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/nuts",
                    "container": "/app"
                }
            ]
        },
        {
            "categories": [
                "Web Application"
            ],
            "description": "Your Budgets, Calendars, Meals, Inventory, Tasks, and so much more in one simple app.For everyone in your household.On all of your devices.In the cloud or self-hosted",
            "logo": "https://homechart.app/images/homechart.min.776793e5e4334866f0799e8a84b8448efb1b06cb2762b2bb20f99068ac36136c.png",
            "name": "homechart",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/homechart.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Homechart",
            "type": 3
        },
        {
            "categories": [
                "Development"
            ],
            "description": "Snippet Box is a simple self-hosted app for organizing your code snippets. It allows you to easily create, edit, browse and manage your snippets in various languages.",
            "logo": "https://raw.githubusercontent.com/getferdi/server/master/logo.png",
            "name": "snippet-box",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/snippetbox.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Snippet Box",
            "type": 3
        },
        {
            "categories": [
                "Finance"
            ],
            "description": "OpenBudgeteer is a budgeting app based on the Bucket Budgeting Principle and inspired by YNAB and Buckets.",
            "logo": "https://github.com/TheAxelander/OpenBudgeteer/raw/master/assets/banner.png",
            "name": "openbudgeteer",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/openbudgeteer.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "OpenBudgeteer",
            "type": 3
        },
        {
            "categories": [
                "Development"
            ],
            "description": "Hasty Paste is a fast and minimal paste bin, written in Python using Quart.",
            "logo": "",
            "name": "hasty-paste",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/hasty-paste.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Hasty-Paste",
            "type": 3
        },
        {
            "categories": [
                "API"
            ],
            "description": "Umami is a simple, easy to use, self-hosted web analytics solution. The goal is to provide you with a friendlier, privacy-focused alternative to Google Analytics and a free, open-sourced alternative to paid solutions",
            "logo": "https://icons.duckduckgo.com/ip3/umami.is.ico",
            "name": "umami",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/umami.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "ports": [
                "3000:3000/tcp"
            ],
            "title": "Umami.is",
            "type": 3
        }
    ]
}