{
    "version": "2",
    "templates": [{
        "type": 3,
        "title": "Airsonic",
        "name": "Airsonic",
        "categories": [
            "Media Sharing"
        ],
        "description": "Airsonic is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
        "note": "<p>Base image documentation at <a href='https://docs.linuxserver.io/images/docker-airsonic-advanced' target='_blank'>Linuxserver.io</a> </p><p>Don't forget to create the volume directories on the host file system.</p><p>'mkdir -p /opt/airsonic/{config,music,playlists,podcasts,media}'</p>",
        "logo": "https://raw.githubusercontent.com/Aspirational-Cognition/past/main/logos/airsonic.png",
        "platform": "linux",
        "repository": {
            "url": "https://github.com/Aspirational-Cognition/past",
            "stackfile": "stackfiles/airsonic/docker-compose.yaml"
        },
        "env": [{
            "name": "PUID",
            "label": "PUID",
            "default": "1010",
            "description": "Linux user id, set for proper filesystem access."
        }, {
            "name": "PGID",
            "label": "PGID",
            "default": "1010",
            "description": "Linux group id, set for proper filesystem access."
        }, {
            "name": "TZ",
            "label": "TZ",
            "default": "America/New_York",
            "description": "Default timezone."
        }, {
            "name": "MAIN_PORT",
            "label": "Main port",
            "default": "4040",
            "description": "Port to expose on the docker host."
        }, {
            "name": "CONTEXT_PATH",
            "label": "CONTEXT_PATH",
            "default": "/",
            "description": "For setting url-base in reverse proxy setups."
        }, {
            "name": "AIRSONIC_CONFIG",
            "label": "AIRSONIC_CONFIG",
            "default": "/opt/airsonic/config",
            "description": "Bind mount for configs."
        }, {
            "name": "AIRSONIC_MUSIC",
            "label": "AIRSONIC_MUSIC",
            "default": "/opt/airsonic/music",
            "description": "Bind mount for music."
        }, {
            "name": "AIRSONIC_PLAYLISTS",
            "label": "AIRSONIC_PLAYLISTS",
            "default": "/opt/airsonic/playlists",
            "description": "Bind mount for playlists."
        }, {
            "name": "AIRSONIC_PODCASTS",
            "label": "AIRSONIC_PODCASTS",
            "default": "/opt/airsonic/podcasts",
            "description": "Bind mount for podcasts."
        }, {
            "name": "AIRSONIC_MEDIA",
            "label": "AIRSONIC_MEDIA",
            "default": "/opt/airsonic/media",
            "description": "Bind mount for media."
        }, {
            "name": "JAVA_OPTS",
            "label": "JAVA_OPTS",
            "default": "-Xms256m -Xmx512m",
            "description": "For passing additional java options."
        }]
    }, {
        "type": 3,
        "title": "Apprise-api",
        "name": "Apprise",
        "categories": [
            "API"
        ],
        "description": "Apprise-api ( https://github.com/caronc/apprise-api ) takes advantage of Apprise ( https://github.com/caronc/apprise ) through your network with a user-friendly API. Send notifications to more than 65+ services. An incredibly lightweight gateway to Apprise. A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
        "note": "<p>Base image documentation at <a href='https://docs.linuxserver.io/images/docker-apprise-api' target='_blank'>Linuxserver.io</a></p><p>Don't forget to create the volume directories on the host file system.</p><p>'mkdir -p /opt/apprise-api/config}'</p>",
        "logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
        "platform": "linux",
        "env": [{
            "name": "PUID",
            "label": "PUID",
            "default": "1010",
            "description": "Linux user id, set for proper filesystem access."
        }, {
            "name": "PGID",
            "label": "PGID",
            "default": "1010",
            "description": "Linux group id, set for proper filesystem access."
        }, {
            "name": "TZ",
            "label": "TZ",
            "default": "America/New_York",
            "description": "Default timezone."
        }, {
            "name": "APPRISE_API_CONFIG",
            "label": "APPRISE_API_CONFIG",
            "default": "/opt/apprise-api/config",
            "description": "Bind mount for configs."
        }, {
            "name": "MAIN_PORT",
            "label": "Main port",
            "default": "8000",
            "description": "Port to expose on the docker host."
        }]
    }, {
        "type": 3,
        "title": "BudgE",
        "name": "BudgE",
        "categories": [
            "Finance"
        ],
        "description": "BudgE is an open source 'budgeting with envelopes' personal finance app.",
        "note": "<p>Source repo at <a href='https://github.com/linuxserver/budge' target='_blank'>GitHub</a> Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /opt/budge/{config,data}</p>",
        "logo": "https://github.com/linuxserver/budge/raw/main/frontend/public/logo192.png",
        "platform": "linux",
        "env": [{
            "name": "BUDGE_DATA",
            "label": "BUDGE_DATA",
            "default": "/opt/budge/data",
            "description": "Bind mount for configs."
        }, {
            "name": "BUDGE_CONFIG",
            "label": "BUDGE_CONFIG",
            "default": "/opt/budge/config",
            "description": "Bind mount for configs."
        }, {
            "name": "MAIN_PORT",
            "label": "Main port",
            "default": "8090"
        }, {
            "name": "PUID",
            "label": "PUID",
            "default": "1010",
            "description": "for UserID"
        }, {
            "name": "PGID",
            "label": "PGID",
            "default": "1010",
            "description": "for GroupID"
        }, {
            "name": "TZ",
            "label": "TZ",
            "default": "America/New_York",
            "description": "Specify a timezone to use for example America/New_York"
        }]
    }, {
        "type": 3,
        "title": "Budibase",
        "categories": [
            "Developer Tools"
        ],
        "description": "Build modern business apps in minutes",
        "logo": "https://budibase.com/favicon.ico",
        "platform": "linux",
        "repository": {
            "url": "https://github.com/Aspirational-Cognition/past",
            "stackfile": "stackfiles/budibase/docker-compose.yaml"
        },
        "env": [{
            "name": "MAIN_PORT",
            "label": "Main port",
            "default": "10000"
        }, {
            "name": "JWT_SECRET",
            "label": "JWT secret",
            "default": "change-me"
        }, {
            "name": "MINIO_ACCESS_KEY",
            "label": "MinIO access key",
            "default": "change-me"
        }, {
            "name": "MINIO_SECRET_KEY",
            "label": "MinIO secret key",
            "default": "change-me"
        }, {
            "name": "COUCH_DB_USER",
            "default": "budibase",
            "preset": true
        }, {
            "name": "COUCH_DB_PASSWORD",
            "label": "Couch DB password",
            "default": "change-me"
        }, {
            "name": "REDIS_PASSWORD",
            "label": "Redis password",
            "default": "change-me"
        }, {
            "name": "INTERNAL_API_KEY",
            "label": "Internal API key",
            "default": "change-me"
        }, {
            "name": "APP_PORT",
            "default": "4002",
            "preset": true
        }, {
            "name": "WORKER_PORT",
            "default": "4003",
            "preset": true
        }, {
            "name": "MINIO_PORT",
            "default": "4004",
            "preset": true
        }, {
            "name": "COUCH_DB_PORT",
            "default": "4005",
            "preset": true
        }, {
            "name": "REDIS_PORT",
            "default": "6379",
            "preset": true
        }, {
            "name": "WATCHTOWER_PORT",
            "default": "6161",
            "preset": true
        }, {
            "name": "BUDIBASE_ENVIRONMENT",
            "default": "PRODUCTION",
            "preset": true
        }]
    }, {
        "type": 1,
        "title": "Netbootxyz",
        "categories": [
            "Networking"
        ],
        "name": "Netbootxyz",
        "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbootxyz/config<br>mkdir -p /volume1/docker/netbootxyz/assets</p>",
        "description": "[Netbootxyz](https://netboot.xyz) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
        "platform": "linux",
        "logo": "https://netboot.xyz/images/netboot.xyz.gif",
        "image": "linuxserver/netbootxyz:latest",
        "env": [{
            "name": "PUID",
            "label": "PUID",
            "default": "1010",
            "description": "for UserID"
        }, {
            "name": "PGID",
            "label": "PGID",
            "default": "1010",
            "description": "for GroupID"
        }, {
            "name": "MENU_VERSION",
            "label": "MENU_VERSION",
            "default": "1.9.9",
            "description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)"
        }, {
            "name": "PORT_RANGE",
            "label": "PORT_RANGE",
            "default": "30000:30010",
            "description": "Specify the port range tftp will use for data transfers [(see Wikipedia)](https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)"
        }, {
            "name": "SUBFOLDER",
            "label": "SUBFOLDER",
            "default": "/",
            "description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)"
        }],
        "ports": [
            "3000:3000/tcp",
            "69:69/udp",
            "8080:80/tcp"
        ],
        "volumes": [{
            "container": "/config",
            "bind": "/volume1/docker/netbootxyz/config"
        }, {
            "container": "/assets",
            "bind": "/volume1/docker/netbootxyz/assets"
        }],
        "restart_policy": "unless-stopped"
    }, {
        "categories": [
            "Web Application"
        ],
        "description": "Your Budgets, Calendars, Meals, Inventory, Tasks, and so much more in one simple app.For everyone in your household.On all of your devices.In the cloud or self-hosted",
        "logo": "https://homechart.app/images/homechart.min.776793e5e4334866f0799e8a84b8448efb1b06cb2762b2bb20f99068ac36136c.png",
        "name": "homechart",
        "platform": "linux",
        "repository": {
            "stackfile": "Template/Stack/homechart.yml",
            "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Homechart",
        "type": 3
    }, {
        "categories": [
            "Development"
        ],
        "description": "Snippet Box is a simple self-hosted app for organizing your code snippets. It allows you to easily create, edit, browse and manage your snippets in various languages.",
        "logo": "https://raw.githubusercontent.com/getferdi/server/master/logo.png",
        "name": "snippet-box",
        "platform": "linux",
        "repository": {
            "stackfile": "Template/Stack/snippetbox.yml",
            "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Snippet Box",
        "type": 3
    }, {
        "categories": [
            "Finance"
        ],
        "description": "OpenBudgeteer is a budgeting app based on the Bucket Budgeting Principle and inspired by YNAB and Buckets.",
        "logo": "https://github.com/TheAxelander/OpenBudgeteer/raw/master/assets/banner.png",
        "name": "openbudgeteer",
        "platform": "linux",
        "repository": {
            "stackfile": "Template/Stack/openbudgeteer.yml",
            "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "OpenBudgeteer",
        "type": 3
    }, {
        "categories": [
            "Development"
        ],
        "description": "Hasty Paste is a fast and minimal paste bin, written in Python using Quart.",
        "logo": "",
        "name": "hasty-paste",
        "platform": "linux",
        "repository": {
            "stackfile": "Template/Stack/hasty-paste.yml",
            "url": "https://github.com/xneo1/portainer_templates"
        },
        "title": "Hasty-Paste",
        "type": 3
    }, {
        "categories": [
            "API"
        ],
        "description": "Umami is a simple, easy to use, self-hosted web analytics solution. The goal is to provide you with a friendlier, privacy-focused alternative to Google Analytics and a free, open-sourced alternative to paid solutions",
        "logo": "https://icons.duckduckgo.com/ip3/umami.is.ico",
        "name": "umami",
        "platform": "linux",
        "repository": {
            "stackfile": "Template/Stack/umami.yml",
            "url": "https://github.com/xneo1/portainer_templates"
        },
        "ports": [
            "3000:3000/tcp"
        ],
        "title": "Umami.is",
        "type": 3
    }, {
        "type": 2,
        "title": "Swarm monitoring",
        "description": "Monitor your cluster performances with Prometheus & Grafana",
        "note": "Requires Docker version 19.03.0+. <b>Make sure to add the <code>monitoring == true</code> one of your Swarm manager node before deploying this stack.</b>",
        "categories": ["Monitoring"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "swarm/monitoring/docker-compose.yml"
        },
        "env": [{
            "name": "GRAFANA_USER",
            "label": "Grafana admin user",
            "default": "admin"
        }, {
            "name": "GRAFANA_PASSWORD",
            "label": "Grafana admin password"
        }]
    }, {
        "type": 2,
        "title": "Redis Cluster",
        "description": "Open-source in-memory data structure store - Cluster mode",
        "categories": ["database"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/redis-cluster/docker-stack.yaml"
        },
        "env": [{
            "name": "REDIS_PASSWD",
            "label": "Redis password"
        }]
    }, {
        "type": 2,
        "title": "Portainer Agent",
        "description": "Manage all the resources in your Swarm cluster",
        "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
        "categories": ["portainer"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/portainer-agent/docker-stack.yml"
        }
    }, {
        "type": 2,
        "title": "OpenFaaS",
        "name": "func",
        "description": "Serverless functions made simple",
        "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
        "categories": ["serverless"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
        "repository": {
            "url": "https://github.com/openfaas/faas",
            "stackfile": "docker-compose.yml"
        }
    }, {
        "type": 2,
        "title": "IronFunctions",
        "description": "Open-source serverless computing platform",
        "note": "Deploys the IronFunctions API and UI.",
        "categories": ["serverless"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/ironfunctions/docker-stack.yml"
        }
    }, {
        "type": 2,
        "title": "CockroachDB",
        "description": "CockroachDB cluster",
        "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
        "categories": ["database"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/cockroachdb/docker-stack.yml"
        }
    }, {
        "type": 2,
        "title": "WordPress",
        "description": "WordPress setup with a MySQL database",
        "note": "Deploys a WordPress instance connected to a MySQL database.",
        "categories": ["CMS"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/wordpress/docker-stack.yml"
        },
        "env": [{
            "name": "MYSQL_DATABASE_PASSWORD",
            "label": "Database root password",
            "description": "Password used by the MySQL root user."
        }]
    }, {
        "type": 3,
        "title": "WordPress",
        "description": "WordPress setup with a MySQL database",
        "note": "Deploys a WordPress instance connected to a MySQL database.",
        "categories": ["CMS"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/wordpress/docker-compose.yml"
        },
        "env": [{
            "name": "MYSQL_DATABASE_PASSWORD",
            "label": "Database root password",
            "description": "Password used by the MySQL root user."
        }]
    }, {
        "type": 3,
        "title": "OpenAMT",
        "description": "OpenAMT Cloud Toolkit",
        "note": "MPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
        "categories": ["Cloud"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/openamt/docker-compose.yml"
        },
        "env": [{
            "name": "POSTGRES_USER",
            "label": "Database user"
        }, {
            "name": "POSTGRES_PASSWORD",
            "label": "Database password"
        }, {
            "name": "MPS_USER",
            "label": "MPS user"
        }, {
            "name": "MPS_PASSWORD",
            "label": "MPS password"
        }, {
            "name": "MPS_COMMON_NAME",
            "label": "MPS URL",
            "description": "Used to connect to the MPS API."
        }, {
            "name": "MPS_SECRET",
            "label": "MPS Secret",
            "description": "Strong secret key used to log into MPS."
        }, {
            "name": "VAULT_SECRET",
            "label": "Vault secret",
            "description": "Secret token used to log into Vault (don't include '.' character)."
        }]
    }, {
        "type": 2,
        "title": "Microsoft OMS Agent",
        "description": "Microsoft Operations Management Suite Linux agent.",
        "categories": ["OPS"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/microsoft-oms/docker-stack.yml"
        },
        "env": [{
            "name": "AZURE_WORKSPACE_ID",
            "label": "Workspace ID",
            "description": "Azure Workspace ID"
        }, {
            "name": "AZURE_PRIMARY_KEY",
            "label": "Primary key",
            "description": "Azure primary key"
        }]
    }, {
        "title": "Sematext Docker Agent",
        "type": 2,
        "categories": ["Log Management", "Monitoring"],
        "description": "Collect logs, metrics and docker events",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
        "platform": "linux",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
        },
        "env": [{
            "name": "LOGSENE_TOKEN",
            "label": "Logs token"
        }, {
            "name": "SPM_TOKEN",
            "label": "SPM monitoring token"
        }]
    }, {
        "title": "Datadog agent",
        "type": 2,
        "categories": ["Monitoring"],
        "description": "Collect events and metrics",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
        "platform": "linux",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/datadog-agent/docker-stack.yml"
        },
        "env": [{
            "name": "API_KEY",
            "label": "Datadog API key"
        }]
    }, {
        "type": 3,
        "title": "FDO",
        "description": "FDO",
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/fdo/docker-stack.yml"
        },
        "env": [{
            "name": "owner_api_user",
            "label": "API Username"
        }, {
            "name": "owner_api_password",
            "label": "API Password"
        }]
    }, {
        "type": 3,
        "title": "Dokku",
        "description": "Dokku setup as a compose file",
        "categories": ["PaaS"],
        "platform": "linux",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/dokku/docker-compose.yml"
        },
        "env": [{
            "name": "VERSION",
            "label": "Dokku version",
            "description": "Version of Dokku to use ('latest' if empty)",
            "default": "latest"
        }, {
            "name": "DOKKU_HOSTNAME",
            "label": "Dokku hostname",
            "description": "Global hostname to be registered by Dokku"
        }, {
            "name": "VOLUME_PATH",
            "label": "Dokku volume path",
            "description": "Host path to be bound to /mnt/dokku (`/var/lib/dokku` if empty)",
            "default": "/var/lib/dokku"
        }, {
            "name": "DOKKU_HOST_ROOT",
            "label": "Dokku host root",
            "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'",
            "default": "/var/lib/dokku/home/dokku"
        }, {
            "name": "SSH_PORT",
            "label": "SSH port",
            "description": "Host port to expose SSH port of Dokku (22 if empty)",
            "default": "22"
        }, {
            "name": "HTTP_PORT",
            "label": "HTTP port",
            "description": "Host port to expose HTTP port of Dokku (80 if empty)",
            "default": "80"
        }, {
            "name": "HTTPS_PORT",
            "label": "HTTPS port",
            "description": "Host port to expose HTTPS port of Dokku (443 if empty)",
            "default": "443"
        }]
    }, {
        "type": 2,
        "title": "LiveSwitch",
        "description": "A basic LiveSwitch stack with gateway, caching, database and media server",
        "categories": ["media"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/liveswitch/docker-stack.yml"
        },
        "env": [{
            "name": "POSTGRES_PASSWORD",
            "label": "Postgres password"
        }]
    }, {
        "type": 3,
        "title": "LiveSwitch",
        "description": "A basic LiveSwitch compose with gateway, caching, database and media server",
        "categories": ["media"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/liveswitch/docker-compose.yml"
        },
        "env": [{
            "name": "POSTGRES_PASSWORD",
            "label": "Postgres password"
        }]
    }, {
        "type": 3,
        "title": "TOSIBOX Lock for Container",
        "description": "Lock for Container brings secure connectivity inside your industrial IoT devices",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/tosibox.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/tosibox/docker-compose.yml"
        },
        "env": [{
            "name": "LICENSE_KEY",
            "label": "License key"
        }]
    }, {
        "type": 3,
        "categories": ["edge"],
        "title": "Softing EdgeConnector modbus",
        "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
        "note": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
        "logo": "https://www.gravatar.com/avatar/c7d3730588d3f501d6753aa22a731bc0?s=80&r=g&d=404",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/softing-edgeconnector-modbus/docker-compose.yml"
        }
    }, {
        "type": 3,
        "categories": ["edge"],
        "title": "Softing EdgeConnector 840D",
        "description": "Access Siemens SINUMERIK 840D sl/pl controllers and provide data via OPC UA and MQTT",
        "logo": "https://www.gravatar.com/avatar/c7d3730588d3f501d6753aa22a731bc0?s=80&r=g&d=404",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/softing-edgeconnector-840d/docker-compose.yml"
        }
    }, {
        "type": 3,
        "categories": ["edge"],
        "title": "Softing EdgeConnector Siemens",
        "description": "Connect Siemens SIMATIC S7-300/400/1200/1500 PLCs and provide the data via OPC UA and MQTT",
        "logo": "https://www.gravatar.com/avatar/c7d3730588d3f501d6753aa22a731bc0?s=80&r=g&d=404",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/softing-edgeconnector-siemens/docker-compose.yml"
        }
    }, {
        "type": 3,
        "categories": ["edge"],
        "title": "Softing EdgeConnector FANUC CNC",
        "description": "Connect FANUC CNCs and provide the data via OPC UA and MQTT",
        "logo": "https://www.gravatar.com/avatar/c7d3730588d3f501d6753aa22a731bc0?s=80&r=g&d=404",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/softing-edgeconnector-fanuc-cnc/docker-compose.yml"
        },
        "env": [{
            "name": "TZ",
            "label": "TZ"
        }]
    }, {
        "type": 3,
        "categories": ["edge"],
        "title": "Softing EdgeConnector Aggregator",
        "description": "Offers a powerful OPC UA aggregation service which provides data via OPC UA, as well as MQTT",
        "logo": "https://www.gravatar.com/avatar/c7d3730588d3f501d6753aa22a731bc0?s=80&r=g&d=404",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/softing-edgeconnector-aggregator/docker-compose.yml"
        },
        "env": [{
            "name": "TZ",
            "label": "TZ"
        }]
    }, {
        "type": 3,
        "categories": ["edge"],
        "title": "OPC Router",
        "description": "No-code middleware for industrial applications The OPC Router connects PLCs, PCS, SCADA, MES, SQL databases and servers, label printers, e-mail servers and erp-systems via OPC UA, MQTT, REST, CSV and many others without any programming effort",
        "note": "More information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
        "logo": "https://store-images.s-microsoft.com/image/apps.45485.5f358ea4-e35f-478a-ab92-e85946891f86.b38fbf34-c2b9-4714-9d8a-1232c004df99.4469177b-aba0-4422-ad40-218ff1d967fb",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/opc-router/docker-compose.yml"
        },
        "env": [{
            "name": "INITIAL_USERNAME",
            "label": "Initial Admin User user"
        }, {
            "name": "INITIAL_PASSWORD",
            "label": "Inital Admin User Password"
        }, {
            "name": "OR_I_ACCEPT_EULA",
            "label": "Accept EULA",
            "select": [{
                "text": "Yes, I accept",
                "value": "true",
                "default": true
            }]
        }]
    }, {
        "type": 3,
        "title": "Pro Mosquitto with Management Center",
        "description": "Commercial-grade Mosquitto MQTT broker with Management Center",
        "note": "The Mosquitto broker password must be at least 12 characters.",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cedalo.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/cedalo-mosquitto-mc/docker-compose.yml"
        },
        "env": [{
            "name": "CEDALO_LICENSE_KEY",
            "label": "License key"
        }, {
            "name": "CEDALO_MOSQUITTO_PASSWORD",
            "label": "Mosquitto password"
        }, {
            "name": "CEDALO_MC_USER",
            "label": "Management Center username",
            "default": "cedalo"
        }, {
            "name": "CEDALO_MC_PASSWORD",
            "label": "Management Center password"
        }]
    }, {
        "type": 3,
        "title": "Node-Red",
        "description": "Low-code programming for event-driven applications",
        "note": "The TZ must be in Unix Format eg America/New_York - see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://avatars.githubusercontent.com/u/5375661?s=200&v=4",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/node-red/docker-compose.yml"
        },
        "env": [{
            "name": "TZ",
            "label": "Time Zone"
        }]
    }, {
        "type": 3,
        "title": "InfluxDB for Edge",
        "description": "InfluxDB Time Series Data Platformm - Single Server deployment",
        "note": "Admin Password must be at least 10 characters",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://store-images.s-microsoft.com/image/apps.61965.8c5e9f22-6a18-49a8-b8b9-6632de74e76c.3c45348f-0adf-4238-b024-bb993be0b664.ccdeeb79-9767-4e92-af5a-1b56f274aa99",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/influxdb/docker-compose.yml"
        },
        "env": [{
            "name": "influxadmin",
            "label": "Influx Admin Username"
        }, {
            "name": "influxadminpass",
            "label": "Influx Admin User Password"
        }, {
            "name": "influxorg",
            "label": "Influx Org Name"
        }, {
            "name": "influxbucket",
            "label": "Influx Bucket Name"
        }]
    }, {
        "type": 3,
        "title": "EMQX Open Source MQTT Broker",
        "description": "Open-source MQTT broker for IoT, IIoT, and connected vehicles - Single Broker deployment",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/docker-library/docs/68aa4264fa058f323993fdaceacd63a8acbbeb48/emqx/logo.svg",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/emqx/docker-compose.yml"
        },
        "env": [{
            "name": "EMQX_DASHBOARD__DEFAULT_USERNAME",
            "label": "EMQX Dashboard Username"
        }, {
            "name": "EMQX_DASHBOARD__DEFAULT_PASSWORD",
            "label": "EMQX Dashboard Password"
        }]
    }, {
        "type": 3,
        "title": "Grafana Dashboard",
        "description": "Multi-platform open-source interactive visualization web application",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/Grafana_logo.svg/1200px-Grafana_logo.svg.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/grafana/docker-compose.yml"
        },
        "env": [{
            "name": "grafana_admin",
            "label": "Grafana Dashboard Username"
        }, {
            "name": "grafana_password",
            "label": "Grafana Dashboard Password"
        }]
    }, {
        "type": 3,
        "title": "Inductive Automation - Ignition Gateway",
        "description": "Ignition Gateway is the primary software service that drives everything in Ignition - Single Server Deployment",
        "note": "For TZ see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://pbs.twimg.com/profile_images/859108636504805376/QHpq7wuh_400x400.jpg",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/ignition_gw/docker-compose.yml"
        },
        "env": [{
            "name": "EULA",
            "label": "Accept Igntion EULA",
            "select": [{
                "text": "Yes, I accept",
                "value": "Y",
                "default": true
            }]
        }, {
            "name": "adminuser",
            "label": "Gateway UI Admin Username"
        }, {
            "name": "adminpass",
            "label": "Gateway UI Admin Password"
        }, {
            "name": "TZ",
            "label": "Time Zone"
        }, {
            "name": "gwedition",
            "label": "Gateway Edition",
            "select": [{
                "text": "Standard",
                "value": "standard",
                "default": true
            }, {
                "text": "Edge",
                "value": "edge"
            }, {
                "text": "Maker",
                "value": "maker"
            }]
        }]
    }, {
        "type": 3,
        "title": "Timescale DB",
        "description": "Open-source time series database developed by Timescale Inc",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://pbs.twimg.com/profile_images/1658849767865167876/hA5OXD9m_400x400.jpg",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/timescaledb/docker-compose.yml"
        },
        "env": [{
            "name": "pgpassword",
            "label": "Database root password"
        }]
    }, {
        "type": 3,
        "title": "Manubes Edge Node",
        "description": "High-performance cloud platform for industrial production management. Manubes is a no-code solution that is used to structure, monitor and control production data, systems and processes in the cloud.",
        "categories": ["edge"],
        "platform": "linux",
        "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/inray-manubes.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "edge/inray-manubes-edge-node/docker-compose.yml"
        },
        "env": [{
            "name": "MANUBES_SECRET",
            "label": "manubes secret"
        }, {
            "name": "ACCEPT_EULA",
            "label": "Accept EULA",
            "select": [{
                "text": "Yes, I accept",
                "value": "true",
                "default": true
            }]
        }]
    }]
}